<?xml version="1.0" encoding="utf-8"?>
<Siml>
<!--Script: Used to initialize a Scripting Engine for a particular scripting-language before user inputs are processed-->
<!--Note: Declaring a value for the "Type" attribute is mandatory-->
<!--Note: Syn Web Assistant does not allow scripts due to security concerns-->
<Script Type="javascript">
	function isFloat(n) {
		return n === +n &amp;&amp; n !== (n | 0);
	}

	function isInteger(n) {
		return n === +n &amp;&amp; n === (n | 0);
	}

	function randomIntBetween(a, b) {
		if (isInteger(Number(a)) &amp;&amp; isInteger(Number(b))) {
			var min = Math.min(a, b);
			var max = Math.max(a, b);

			return Math.floor(Math.random() * (max - min + 1) + min);
		}

        return "Please provide 2 integer numbers.";
	}

    function secondsToString(seconds) {
        var levels = [[Math.floor(seconds / 31536000), 'years'], [Math.floor((seconds % 31536000) / 86400), 'days'], [Math.floor(((seconds % 31536000) % 86400) / 3600), 'hours'], [Math.floor((((seconds % 31536000) % 86400) % 3600) / 60), 'minutes'], [(((seconds % 31536000) % 86400) % 3600) % 60, 'seconds'], ];

        var secondsString = '';

        for (var i = 0, max = levels.length; i &lt; max; i++) {
            if (levels[i][0] === 0) continue;
            secondsString += ' ' + levels[i][0] + ' ' + (levels[i][0] === 1 ? levels[i][1].substr(0, levels[i][1].length - 1) : levels[i][1]);
        };

        return secondsString.trim();
    }

    function stringshuffle(string) {
        var a = string.split("");
        var n = a.length;

        for (var i = n - 1; i &gt; 0; i--) {
            var j = Math.floor(Math.random() * (i + 1));
            var tmp = a[i];
            a[i] = a[j];
            a[j] = tmp;
        }

        return a.join("");
    }

    function madu(string) {
        var a = string.split(" ");
        var n = a.length;

        for (var i = 0; i &lt; n; i++) {
            a[i] = stringshuffle(a[i]);
        }

        return a.join(" ");
    }

    function arrayofnumbers(n) {
        var i, arr = [];

        for (i = 0; i &lt; n; i++) {
            arr.push(i + 1);
        }

        var n = arr.length;

        for (i = n - 1; i &gt; 0; i--) {
            var j = Math.floor(Math.random() * (i + 1));
            var tmp = arr[i];
            arr[i] = arr[j];
            arr[j] = tmp;
        }

        return arr;
    }

    function pickfromarray(array, index) { // This one seems to accept a string, not an array.
        var a = array.split(",");
        return a[index];
    }

    /**
     * Converts human time string to seconds. For easier use in SIML, returns -1 on error.
     * @param {string} timeString - human readable time string (eg. '3 minutes')
     * @returns {number} timeInSeconds
     */
    function convertTimeStringToSeconds(timeString) {
        var timeUnits = {
            second: 1,
            minute: 60,
            hour: 60 * 60,
            day: 60 * 60 * 24
        };

        var timeArray = removeFromArray(trimTrailingComma(timeString).split(' '), 'and');

        if (timeArray.length === 1) {
            var timeInSeconds = parseInt(timeArray[0], 10); // We assume seconds are the default units
            if (isNaN(timeInSeconds)) return -1;
            return timeInSeconds;
        }

        if (timeArray.length === 2) { // [value, unit]
            var unit = singularizeTimeUnit(timeArray[1].toLowerCase());
            if (isNaN(timeUnits[unit])) return -1;
            var timeInSeconds = parseInt(timeArray[0], 10) * timeUnits[unit];
            return timeInSeconds;
        }

        if (timeArray.length > 2 &amp;&amp; timeArray.length % 2 === 0) { // Multiple [value, unit] pairs
            var timeInSeconds = 0;
            var repeats = timeArray.length / 2;

            for (var i = 0; i &lt; repeats; ++i) {
                var secondsToAdd = convertTimeStringToSeconds([timeArray[i * 2], timeArray[(i * 2) + 1]].join(' '));
                if (secondsToAdd > 0) timeInSeconds = timeInSeconds + secondsToAdd;
            }

            if (!timeInSeconds) return -1;
            return timeInSeconds;
        }

        return -1;
    }

    /**
     * Converts plural time unit forms to singulars by removing trailing 's'
     * @param {string} unit
     * @returns {string} unit
     */
    function singularizeTimeUnit(unit) {
        if (['seconds', 'minutes', 'hours', 'days'].indexOf(unit) !== -1) return unit.slice(0, -1);
        return unit;
    }

    /**
     * Removes trailing commas in given string
     * @param {string} string
     * @returns {string} string
     */
    function trimTrailingComma(string) {
        if (string[string.length - 1] === ',') return string.slice(0, -1);
        return string;
    }

    /**
     * Removes given element from an array
     * @param {Array} array
     * @param element
     */
    function removeFromArray(array, element) {
        for (var i = array.length; i--;) {
            if (array[i] === element) {
                array.splice(i, 1);
            }
        }

        return array;
    }
</Script>
</Siml>